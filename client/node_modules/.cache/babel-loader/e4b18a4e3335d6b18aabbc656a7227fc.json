{"ast":null,"code":"var _jsxFileName = \"/Users/maxdraguhn/Documents/codeworks/ReactAssessment/client/codemocracy/src/components/TopicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TopicForm({\n  createTopic\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = e => {\n    if (error) setError(false);\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    // e.preventDefault .... prevent. reloading the page\n    e.preventDefault();\n\n    if (title) {\n      createTopic({\n        title\n      });\n      setTitle('');\n    } else setError(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form__input\",\n        value: title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form__input\",\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form__submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this);\n}\n\n_s(TopicForm, \"abEFZU+SjcDLaTuNcUyNbUhxoZU=\");\n\n_c = TopicForm;\nexport default TopicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopicForm\");","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/codeworks/ReactAssessment/client/codemocracy/src/components/TopicForm.js"],"names":["useState","TopicForm","createTopic","title","setTitle","error","setError","name","setName","handleChange","e","target","value","handleSubmit","preventDefault"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAkC;AAAA;;AAEhC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIL,KAAJ,EAAWC,QAAQ,CAAC,KAAD,CAAR;AACXF,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1B;AACAA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIX,KAAJ,EAAW;AACTD,MAAAA,WAAW,CAAC;AAACC,QAAAA;AAAD,OAAD,CAAX;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAHD,MAGOE,QAAQ,CAAC,IAAD,CAAR;AACR,GAPD;;AASA,sBAAQ;AAAA,2BACN;AAAM,MAAA,QAAQ,EAAEO,YAAhB;AAA8B,MAAA,SAAS,EAAC,MAAxC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,KAAK,EAAGV,KAAnD;AAA2D,QAAA,QAAQ,EAAEM;AAArE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,KAAK,EAAGF,IAAnD;AAA0D,QAAA,QAAQ,EAAEE;AAApE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,UAAR;AAOD;;GA5BQR,S;;KAAAA,S;AA8BT,eAAeA,SAAf","sourcesContent":["import { useState } from 'react'\n\nfunction TopicForm({createTopic}) {\n\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [name, setName] = useState('');\n\n  \n  const handleChange = (e) => {\n    if (error) setError(false)\n    setTitle(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    // e.preventDefault .... prevent. reloading the page\n    e.preventDefault();\n    if (title) {\n      createTopic({title});\n      setTitle('');\n    } else setError(true)\n  }\n\n  return (<div>\n    <form onSubmit={handleSubmit} className='form'>\n      <input type='text' className='form__input' value={ title } onChange={handleChange}></input>\n      <input type='text' className='form__input' value={ name } onChange={handleChange}></input>\n      <button type='submit' className='form__submit'>Create Post</button>\n    </form>\n  </div>)\n}\n\nexport default TopicForm"]},"metadata":{},"sourceType":"module"}