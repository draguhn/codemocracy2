{"ast":null,"code":"var _jsxFileName = \"/Users/maxdraguhn/Documents/codeworks/ReactAssessment/client/codemocracy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport TopicList from './components/TopicList';\nimport ApiService from './components/ApiService';\nimport TopicForm from './components/TopicForm';\nimport { then } from '../../../server/models';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [topics, setTopics] = useState([]);\n  useEffect(() => {\n    ApiService.getTopics().then(topics => setTopics(topics));\n  }, []);\n\n  const createTopic = body => {\n    ApiService.postTopic(body).then(topic => {\n      setTopics(prevTopics => [...prevTopics, topic]);\n    });\n  };\n\n  const deleteTopic = id => {\n    ApiService.deleteTopic(id).then(() => {\n      setTopics(topics => topics.filter(topic => topic._id !== id));\n    });\n  };\n\n  const voteTopic = (id, direction) => {\n    ApiService.voteTopic(id, direction);\n    then(updatedTopic => {\n      setTopics(topics => {\n        const index = topics.findIndex(topic => topic._id === updatedTopic._id);\n        return [...topics].splice(index, updatedTopic);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopicForm, {\n      createTopic: createTopic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TopicList, {\n      topics: topics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5PrH2L6CTp15aUV0qkyKrxReD80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/codeworks/ReactAssessment/client/codemocracy/src/App.js"],"names":["useState","useEffect","TopicList","ApiService","TopicForm","then","App","topics","setTopics","getTopics","createTopic","body","postTopic","topic","prevTopics","deleteTopic","id","filter","_id","voteTopic","direction","updatedTopic","index","findIndex","splice"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,IAAT,QAAqB,wBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbE,IAAAA,UAAU,CAACM,SAAX,GACCJ,IADD,CACOE,MAAD,IAAYC,SAAS,CAACD,MAAD,CAD3B;AAED,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMG,WAAW,GAAIC,IAAD,IAAU;AAC5BR,IAAAA,UAAU,CAACS,SAAX,CAAqBD,IAArB,EACCN,IADD,CACMQ,KAAK,IAAI;AACbL,MAAAA,SAAS,CAACM,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgBD,KAAhB,CAAf,CAAT;AACD,KAHD;AAID,GALD;;AAOA,QAAME,WAAW,GAAIC,EAAD,IAAQ;AAC1Bb,IAAAA,UAAU,CAACY,WAAX,CAAuBC,EAAvB,EACCX,IADD,CACM,MAAM;AACVG,MAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,CAACU,MAAP,CAAcJ,KAAK,IAAIA,KAAK,CAACK,GAAN,KAAcF,EAArC,CAAX,CAAT;AACD,KAHD;AAID,GALD;;AAOA,QAAMG,SAAS,GAAG,CAACH,EAAD,EAAKI,SAAL,KAAmB;AACnCjB,IAAAA,UAAU,CAACgB,SAAX,CAAqBH,EAArB,EAAyBI,SAAzB;AACAf,IAAAA,IAAI,CAAEgB,YAAD,IAAkB;AACrBb,MAAAA,SAAS,CAACD,MAAM,IAAI;AAClB,cAAMe,KAAK,GAAGf,MAAM,CAACgB,SAAP,CAAiBV,KAAK,IAAIA,KAAK,CAACK,GAAN,KAAcG,YAAY,CAACH,GAArD,CAAd;AACA,eAAO,CAAC,GAAGX,MAAJ,EAAYiB,MAAZ,CAAmBF,KAAnB,EAA0BD,YAA1B,CAAP;AACD,OAHQ,CAAT;AAKD,KANG,CAAJ;AAOD,GATD;;AAWA,sBACE;AAAA,4BACA,QAAC,SAAD;AAAW,MAAA,WAAW,EAAGX;AAAzB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxCQD,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport TopicList from './components/TopicList'\nimport ApiService from './components/ApiService';\nimport TopicForm from './components/TopicForm'\nimport { then } from '../../../server/models';\n\nfunction App() {\n\n  const [topics, setTopics] = useState([])\n\n  useEffect(()=> {\n    ApiService.getTopics()\n    .then((topics) => setTopics(topics))\n  }, [])\n\n  const createTopic = (body) => {\n    ApiService.postTopic(body)\n    .then(topic => {\n      setTopics(prevTopics => [...prevTopics, topic])\n    })\n  }\n\n  const deleteTopic = (id) => {\n    ApiService.deleteTopic(id)\n    .then(() => {\n      setTopics(topics => topics.filter(topic => topic._id !== id))\n    })\n  }\n\n  const voteTopic = (id, direction) => {\n    ApiService.voteTopic(id, direction)\n    then((updatedTopic) => {\n      setTopics(topics => {\n        const index = topics.findIndex(topic => topic._id === updatedTopic._id)\n        return [...topics].splice(index, updatedTopic)\n      })\n\n    } )\n  }\n\n  return (\n    <div>\n    <TopicForm createTopic={ createTopic }/>\n    <TopicList topics={topics}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}