{"ast":null,"code":"const url = 'http://localhost:3001';\n\nfunction getTopics() {\n  return fetchRequest('/topics');\n}\n\nfunction postTopic(body) {\n  return fetchRequest('/topics', {\n    method: 'Post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n}\n\nfunction fetchRequest(path, options) {\n  return fetch(url + path).then(res => res.status <= 400 ? res : Promise.reject()).then(res => res.status === 204 ? res : res.json()).catch(err => {\n    console.log(`ERROR fetching ${path}`, err);\n  });\n}\n\nexport default {\n  getTopics,\n  postTopic\n};","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/codeworks/ReactAssessment/client/codemocracy/src/components/ApiService.js"],"names":["url","getTopics","fetchRequest","postTopic","body","method","headers","JSON","stringify","path","options","fetch","then","res","status","Promise","reject","json","catch","err","console","log"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uBAAZ;;AAEA,SAASC,SAAT,GAAsB;AACpB,SAAOC,YAAY,CAAC,SAAD,CAAnB;AACD;;AAED,SAASC,SAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOF,YAAY,CAAC,SAAD,EAAY;AAC7BG,IAAAA,MAAM,EAAE,MADqB;AAE7BC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFoB;AAK7BF,IAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AALuB,GAAZ,CAAnB;AAOD;;AAED,SAASF,YAAT,CAAsBO,IAAtB,EAA4BC,OAA5B,EAAqC;AACnC,SAAOC,KAAK,CAACX,GAAG,GAAGS,IAAP,CAAL,CACJG,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,MAAJ,IAAc,GAAd,GAAoBD,GAApB,GAA0BE,OAAO,CAACC,MAAR,EADlC,EAEJJ,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,GAAqBD,GAArB,GAA2BA,GAAG,CAACI,IAAJ,EAFnC,EAGJC,KAHI,CAGEC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBZ,IAAK,EAAnC,EAAsCU,GAAtC;AACD,GALI,CAAP;AAMD;;AAED,eAAe;AAAElB,EAAAA,SAAF;AAAaE,EAAAA;AAAb,CAAf","sourcesContent":["const url = 'http://localhost:3001';\n\nfunction getTopics () {\n  return fetchRequest('/topics');\n}\n\nfunction postTopic (body) {\n  return fetchRequest('/topics', {\n    method: 'Post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n}\n\nfunction fetchRequest(path, options) {\n  return fetch(url + path)\n    .then(res => res.status <= 400 ? res : Promise.reject())\n    .then(res => res.status === 204 ? res : res.json())\n    .catch(err => {\n      console.log(`ERROR fetching ${path}`, err)\n    })\n}\n\nexport default { getTopics, postTopic};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}