{"ast":null,"code":"var _jsxFileName = \"/Users/maxdraguhn/Documents/codeworks/ReactAssessment/client/codemocracy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport TopicList from './components/TopicList';\nimport ApiService from './components/ApiService';\nimport TopicForm from './components/TopicForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [topics, setTopics] = useState([]);\n  useEffect(() => {\n    ApiService.getTopics().then(topics => setTopics(topics));\n  }, []);\n\n  const createTopic = body => {\n    ApiService.postTopic(body).then(topic => {\n      setTopics(prevTopics => [...prevTopics, topic]);\n    });\n  };\n\n  const deleteTopic = id => {\n    ApiService.deleteTopic(id).then(() => {\n      setTopics(topics => topics.filter(topic => topic._id !== id));\n    });\n  };\n\n  const voteTopic = (id, direction) => {\n    ApiService.voteTopic(id, direction).then(updatedTopic => {\n      setTopics(topics => {\n        const index = topics.findIndex(topic => topic._id === updatedTopic._id);\n        const copyOfTopics = [...topics];\n        copyOfTopics.splice(index, 1, updatedTopic);\n        return copyOfTopics;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopicForm, {\n      createTopic: createTopic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopicList, {\n      topics: topics,\n      deleteTopic: deleteTopic,\n      voteTopic: voteTopic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5PrH2L6CTp15aUV0qkyKrxReD80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/codeworks/ReactAssessment/client/codemocracy/src/App.js"],"names":["useState","useEffect","TopicList","ApiService","TopicForm","App","topics","setTopics","getTopics","then","createTopic","body","postTopic","topic","prevTopics","deleteTopic","id","filter","_id","voteTopic","direction","updatedTopic","index","findIndex","copyOfTopics","splice"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,CAACK,SAAX,GACGC,IADH,CACSH,MAAD,IAAYC,SAAS,CAACD,MAAD,CAD7B;AAED,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,WAAW,GAAIC,IAAD,IAAU;AAC5BR,IAAAA,UAAU,CAACS,SAAX,CAAqBD,IAArB,EACGF,IADH,CACQI,KAAK,IAAI;AACbN,MAAAA,SAAS,CAACO,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgBD,KAAhB,CAAf,CAAT;AACD,KAHH;AAID,GALD;;AAOA,QAAME,WAAW,GAAIC,EAAD,IAAQ;AAC1Bb,IAAAA,UAAU,CAACY,WAAX,CAAuBC,EAAvB,EACGP,IADH,CACQ,MAAM;AACVF,MAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,CAACW,MAAP,CAAcJ,KAAK,IAAIA,KAAK,CAACK,GAAN,KAAcF,EAArC,CAAX,CAAT;AACD,KAHH;AAID,GALD;;AAOA,QAAMG,SAAS,GAAG,CAACH,EAAD,EAAKI,SAAL,KAAmB;AACnCjB,IAAAA,UAAU,CAACgB,SAAX,CAAqBH,EAArB,EAAyBI,SAAzB,EACGX,IADH,CACSY,YAAD,IAAkB;AACtBd,MAAAA,SAAS,CAACD,MAAM,IAAI;AAClB,cAAMgB,KAAK,GAAGhB,MAAM,CAACiB,SAAP,CAAiBV,KAAK,IAAIA,KAAK,CAACK,GAAN,KAAcG,YAAY,CAACH,GAArD,CAAd;AACA,cAAMM,YAAY,GAAG,CAAC,GAAGlB,MAAJ,CAArB;AACAkB,QAAAA,YAAY,CAACC,MAAb,CAAoBH,KAApB,EAA2B,CAA3B,EAA8BD,YAA9B;AACA,eAAOG,YAAP;AACD,OALQ,CAAT;AAMD,KARH;AASD,GAVD;;AAYA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEd;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,MAAM,EAAEJ,MADV;AAEE,MAAA,WAAW,EAAES,WAFf;AAGE,MAAA,SAAS,EAAEI;AAHb;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA7CQd,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport TopicList from './components/TopicList'\nimport ApiService from './components/ApiService';\nimport TopicForm from './components/TopicForm';\n\nfunction App() {\n\n  const [topics, setTopics] = useState([]);\n\n  useEffect(() => {\n    ApiService.getTopics()\n      .then((topics) => setTopics(topics))\n  }, [])\n\n  const createTopic = (body) => {\n    ApiService.postTopic(body)\n      .then(topic => {\n        setTopics(prevTopics => [...prevTopics, topic])\n      })\n  }\n\n  const deleteTopic = (id) => {\n    ApiService.deleteTopic(id)\n      .then(() => {\n        setTopics(topics => topics.filter(topic => topic._id !== id))\n      })\n  }\n\n  const voteTopic = (id, direction) => {\n    ApiService.voteTopic(id, direction)\n      .then((updatedTopic) => {\n        setTopics(topics => {\n          const index = topics.findIndex(topic => topic._id === updatedTopic._id)\n          const copyOfTopics = [...topics];\n          copyOfTopics.splice(index, 1, updatedTopic)\n          return copyOfTopics\n        })\n      })\n  }\n\n  return (\n    <div>\n      <TopicForm createTopic={createTopic} />\n      <TopicList\n        topics={topics}\n        deleteTopic={deleteTopic}\n        voteTopic={voteTopic}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}